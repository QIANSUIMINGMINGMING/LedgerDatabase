SET(LEDGER_INCLUDE_DIRS "")
SET(LEDGER_LINKER_LIBS "")
SET(LEDGER_DEFINITIONS "")

FIND_PACKAGE(Protobuf REQUIRED)

FIND_PACKAGE(LibEvent REQUIRED)
LIST(APPEND DIST_INCLUDE_DIRS ${LIBEVENT_INCLUDE_DIRS})
LIST(APPEND DIST_LINKER_LIBS ${LIBEVENT_LIBRARIES})

FIND_PACKAGE(Boost REQUIRED COMPONENTS ${BOOST_COMPONENT})
IF(Boost_FOUND)
    LIST(APPEND LEDGER_INCLUDE_DIRS ${Boost_INCLUDE_DIRS})
    LIST(APPEND LEDGER_LINKER_LIBS ${Boost_LIBRARIES})
ENDIF()

FIND_PACKAGE(Rocksdb REQUIRED)
IF(ROCKSDB_FOUND)
  LIST(APPEND LEDGER_INCLUDE_DIRS ${ROCKSDB_INCLUDES})
  LIST(APPEND LEDGER_LINKER_LIBS ${ROCKSDB_LIBRARIES})
  ADD_DEFINITIONS(-DUSE_ROCKSDB)
ENDIF()

# FIND_PACKAGE(CryptoPP REQUIRED)
# IF(CRYPTOPP_FOUND)
#   LIST(APPEND LEDGER_INCLUDE_DIRS ${CRYPTOPP_INCLUDE_DIR})
#   LIST(APPEND LEDGER_LINKER_LIBS ${CRYPTOPP_LIBRARIES})
# ENDIF()
LIST(APPEND LEDGER_LINKER_LIBS ${CMAKE_SOURCE_DIR}/ledger/gpumpt/libgmpt.a)

find_library(CRYPTOPP_LIB cryptopp)
LIST(APPEND LEDGER_LINKER_LIBS ${CRYPTOPP_LIB})

find_package(TBB REQUIRED)
LIST(APPEND LEDGER_INCLUDE_DIRS ${TBB_INCLUDE_DIRS})
LIST(APPEND LEDGER_LINKER_LIBS TBB::tbb TBB::tbbmalloc)

LIST(APPEND LEDGER_LINKER_LIBS /usr/local/cuda/lib64/libcudart.so)

find_path(REDIS_PLUS_PLUS_HEADER sw) 
LIST(APPEND LEDGER_INCLUDE_DIRS ${REDIS_PLUS_PLUS_HEADER})
find_library(REDIS_PLUS_PLUS_LIB redis++)
LIST(APPEND LEDGER_LINKER_LIBS ${REDIS_PLUS_PLUS_LIB})

# <------------ add hiredis dependency here --------------->
find_path(HIREDIS_HEADER hiredis)
LIST(APPEND LEDGER_INCLUDE_DIRS ${HIREDIS_HEADER})
find_library(HIREDIS_LIB hiredis)
LIST(APPEND LEDGER_LINKER_LIBS ${HIREDIS_LIB})

find_package(LibXml2 REQUIRED)
LIST(APPEND LEDGER_INCLUDE_DIRS ${LIBXML2_INCLUDE_DIR})
LIST(APPEND LEDGER_LINKER_LIBS ${LIBXML2_LIBRARIES})

LIST(APPEND LEDGER_INCLUDE_DIRS ${CMAKE_CUDA_TOOLKIT_INCLUDE_DIRECTORIES})

INCLUDE_DIRECTORIES(SYSTEM ${LEDGER_INCLUDE_DIRS})
# MESSAGE(STATUS "INCLUDE ${LEDGER_INCLUDE_DIRS}")
